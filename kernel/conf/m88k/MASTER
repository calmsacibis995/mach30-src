#
# Mach Operating System
# Copyright (c) 1992 Carnegie-Mellon University
# All rights reserved.  The CMU software License Agreement specifies
# the terms and conditions for use and redistribution.
#  
#
# HISTORY
# $Log:	MASTER,v $
# Revision 2.3  93/05/24  11:11:03  rvb
# 	Need to have lineno on or mk does not boot!
# 	[93/05/24            rvb]
# 
# Revision 2.2  93/02/04  16:57:00  mrt
# 	Added ipc_compat.
# 	[93/02/03            jfriedl]
# 
# 	Removed lineno as it is now defined in MI MASTER.
# 	[93/01/25            mrt]
# 
#	Revision 2.2  92/08/03  17:21:41  jfriedl
#	Added OMRON, RAW_PRINTF options.
#
#	 Revision 2.1.1.1  92/05/27  15:13:54  danner
#	Created from luna88k.
#	[92/05/16            danner]
#
#	 Revision 2.7  92/05/04  11:23:16  danner
#	 	Added BOOTSTRAP_SYMBOLS option.
#	 	[92/05/03            danner]
#	 
#	 	Added lance (ln).
#	 	[92/04/21            danner]
#	 
#	 Revision 2.6  92/02/25  14:13:29  elf
#	 	Added savarg option.
#	 	[92/02/25            danner]
#	 
#	 Revision 2.6  92/02/19  15:06:30  elf
#	 	Simplified, condensed history.
#	 	[92/02/17            rpd]
#	 
#	 	Condensed history:
#	 	Added saveargs option to support argument recovery.
#	 	Added -moptimize-arg-area in non save args case.
#	 
#	Created (danner, rvb).
#
#	  CPU TYPE (select exactly one)
#
#	luna88k = Luna's MC88K CPU
#	vme188 = Motorola VME 188 board.
#
#	  Production Configuration Components:
#	  ---------- ------------- ----------
#
#	  STD   = [ ipc_compat multi4 host raw_printf ]
#	  WS    = [ luna88k scsi hw_foot ]
#

conftype	"m88k"		# <luna88k>
platform	"LUNA88K"	# <luna88k>
makevariables	LINENO="-g"	# <luna88k>

config		mach		# <ramdisk>
config		mach_kernel	# <scsi>


#makevariables	ARGAREA="-moptimize-arg-area"		# <argarea>

#
options		RAW_PRINTF				# <raw_printf>
options		BYTE_MSF				# <luna88k>

#
# Luna 88K Devices
#
options		"luna88k"				# <luna88k>
options		luna					# <luna88k>

controller	obio 0	at nexus ?			# <luna88k>

controller	SCSI 0	at obio ? vector scintr		# <luna88k>
disk		scsi 0	at SCSI 0 drive  0 flags 0	# <luna88k>
disk		scsi 1	at SCSI 0 drive  1 flags 0	# <luna88k>
tape		st 0	at SCSI 0 drive  8 flags 1	# <luna88k>
tape		st 1	at SCSI 0 drive  9 flags 1	# <luna88k>
device		usc 0	at SCSI 0 drive 16 flags 2	# <luna88k>
device		usc 1	at SCSI 0 drive 17 flags 2	# <luna88k>
device		usc 2	at SCSI 0 drive 18 flags 2	# <luna88k>

controller      XP 0    at obio ? vector xpintr		# <luna88k>
device          fd 0     at XP 0 drive 0 flags 0	# <luna88k>
device          fd 1     at XP 0 drive 1 flags 0	# <luna88k>
device          fd 2     at XP 0 drive 2 flags 0	# <luna88k>
device          fd 3     at XP 0 drive 3 flags 0	# <luna88k>
device          lp 0     at XP 0 drive 4 flags 1	# <luna88k>
device          ssg 0    at XP 0 drive 5 flags 2	# <luna88k_not_supported>
device          sio 0    at XP 0 drive 6 flags 3	# <luna88k>
device          sio 1    at XP 0 drive 7 flags 3	# <luna88k>

device		ln  0 					# <luna88k>

controller	EX 0	at obio ? vector exintr		# <luna88k_not_supported>
device		ex 0	at EX 0 drive 0			# <luna88k_not_supported>

controller	CP 0	at obio ? vector cpintr		# <luna88k_not_supported>
device		cp 0	at CP 0 drive 0			# <luna88k_not_supported>

controller	FB 0	at obio ? vector fbintr		# <luna88k>
device		fb 0	at FB 0 drive 0			# <luna88k>

controller	RA 0	at obio ? vector raintr		# <luna88k>
device		ra 0	at RA 0 drive 0			# <luna88k>

controller	EU 0	at obio ? vector euintr		# <luna88k>
device		eu 0	at EU 0 drive 0			# <luna88k>

controller	ASP 0	at obio ? vector aspintr	# <luna88k>
device		asp 0	at ASP 0 drive 0 flags 0	# <luna88k>
device		tasp 0	at ASP 0 drive 1 flags 1	# <luna88k>

pseudo-device	ether					# <luna88k>
pseudo-device	imp					# <luna88k>
pseudo-device	loop					# <luna88k>
pseudo-device	pty 2					# <luna88k>
pseudo-device	sl 2					# <luna88k>
pseudo-device	vty					# <luna88k>
pseudo-device	gs					# <luna88k>
#pseudo-device	stp					# <luna88k>
#pseudo-device	sxt					# <luna88k>
